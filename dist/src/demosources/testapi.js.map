{"version":3,"sources":["../../../src/demosources/testapi.js"],"names":["settingsVariableNames","particle","Particle","accessToken","deviceId","ledOn","$","document","ready","initPage","on","loginButtonHandler","logoutButtonHandler","deviceSelectChange","Cookies","get","undefined","show","updateDeviceList","event","attr","user","val","pass","login","username","password","then","data","body","access_token","console","log","set","expires","removeAttr","hide","err","preventDefault","lastDeviceId","listDevices","auth","devices","ii","length","dev","connected","sel","id","html","name","append","accessTokenErrorHandler","getVariable","settingsCSV","result","settingsArray","split","inputFields","d","formOutput","serializeArray","formOutputString","formOutputArray","changedSomething","i","value","join","statusCode","remove"],"mappings":"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","file":"testapi.js","sourcesContent":["var settingsVariableNames = [\n  \"fixtureProductRangeId\",\n  \"fixtureProductUniqueId\",\n  \"useVoltSense\",\n  \"hasRockerSwitch\",\n  \"hasPushButton\",\n  \"hasPIRSensor\",\n  \"hasRTCBattery\",\n  \"buttonPin\",\n  \"fixtureFirmwareVersion\",\n  \"lumiMainLocation\",\n  \"lumiLocation\",\n  \"pinCode\",\n  \"wiFiMode\",\n  \"webAppMode\",\n  \"masterSlaveMode\",\n  \"masterSlaveId\",\n  \"xPosOffset\",\n  \"yPosOffset\",\n  \"timeOffset\",\n  \"timeZone\",\n  \"dayLightSaving\",\n  \"timeSwitch1_Mode\",\n  \"timeSwitch1_WakeUpHour\",\n  \"timeSwitch1_WakeUpMinutes\",\n  \"timeSwitch1_SleepHour\",\n  \"timeSwitch1_SleepMinutes\",\n  \"timeSwitch2_Mode\",\n  \"timeSwitch2_WakeUpHour\",\n  \"timeSwitch2_WakeUpMinutes\",\n  \"timeSwitch2_SleepHour\",\n  \"timeSwitch2_SleepMinutes\",\n  \"randomPaletteTime\",\n  \"turnOnRandomPaletteTimerAfterInteractionTime\",\n  \"defaultHue\",\n  \"defaultHarmony\",\n  \"defaultMasterBrightness\",\n  \"defaultColorTemperature\",\n  \"defaultMaxSaturation\",\n  \"defaultMinSaturation\",\n  \"defaultMaxBrightness\",\n  \"defaultMinBrightness\",\n  \"defaultEffectMode\",\n  \"defaultEffectSpeed\"\n];\n\n// You need a Particle object to call the API. Make sure your html file loads the js file for the API.\nvar particle = new Particle();\n\n// Global variables\nvar accessToken;\nvar deviceId;\nvar ledOn = false;\n\n$(document).ready(function () {\n  initPage();\n});\n\nfunction initPage() {\n  // Hook up handlers using jquery\n  $('#loginButton').on('click', loginButtonHandler);\n  $('#logoutButton').on('click', logoutButtonHandler);\n  $('#deviceSelect').on('change', deviceSelectChange);\n\n  //$('#toggleButton').on('click', toggleButtonHandler);\n\n  // Read the access token from a browser cookie, if we can. This uses js-cookie.js, which is much\n  // easier than coding for each browser quirk you might encounter.\n\n  // Note: We don't store the actual username and password, but the access token that has a limited\n  // lifetime and is less sensitive. You may not even want to save the accessToken at all, but for\n  // this test program it's helpful because it eliminates the need to type in your username and\n  // password every time you reload the page.\n  accessToken = Cookies.get('accessToken');\n\n  if (accessToken == undefined || accessToken == '') {\n    // Show the login page\n    $('#loginDiv').show();\n  }\n  else {\n    // We have an access token, so show the main page. Note that the access token\n    // may be expired, but we'll only find that out the first time we try to use it, when\n    // we update the device list.\n    $('#mainDiv').show();\n    updateDeviceList();\n  }\n}\n\n// The login button has been clicked\nfunction loginButtonHandler(event) {\n  // Disable the login button so it can't be clicked twice.\n  $('#loginButton').attr('disabled', 'disabled');\n\n  // Get the username and password from the web page, then clear the password field.\n  var user = $('#loginUser').val();\n  var pass = $('#loginPass').val();\n  $('#loginPass').val('');\n\n  //console.log('loginButtonHandler user=' + user + \"pass=<hidden>\");\n\n  // Log in using the Particle API. Note that the password isn't saved anywhere, and it's\n  // sent up to the Particle servers directly, not going through my server, for example.\n  // We get back an access token that we use for other calls.\n\n  // Also note: The particle API uses the promise pattern for functions. Each call\n  // has something like the call name (\"particle.login\") a set of parameters specific to\n  // that call, as an object ({username:user, password:pass}) followed by a then() expression.\n  //\n  // These calls take a while to execute, and Javascript programs should not hold up\n  // execution waiting for things to complete. This call merely starts the processing and\n  // more or less immediately returns.\n  //\n  // The code in the then() expression is executed when the operation is finally complete.\n  // The first function executes if the operation succeeds. The second function executes\n  // if an error occurs.\n\n  particle.login({username: user, password: pass}).then(\n    function (data) {\n      // Executed if login completes successfully\n      accessToken = data.body.access_token;\n      console.log(\"accessToken=\" + accessToken);\n\n      // Save in a browser cookie that expires in 7 days\n      Cookies.set('accessToken', accessToken, {expires: 7});\n\n      // Reenable the login button\n      $('#loginButton').removeAttr('disabled');\n\n      // Hide all of the login related things and error messages and show the mainDiv.\n      $('#loginFailureDiv').hide();\n      $('#apiFailureDiv').hide();\n      $('#loginDiv').hide();\n      $('#mainDiv').show();\n      updateDeviceList();\n    },\n    function (err) {\n      // Failure to log in. Probably an invalid password. Could possibly be another\n      // error from the server; you might want to check for that in a real app.\n      console.log('login failed ', err);\n      $('#loginButton').removeAttr('disabled');\n      $('#apiFailureDiv').hide();\n      $('#loginFailureDiv').show();\n    }\n  );\n\n  // Note that when this code is executed, the login operation hasn't completed yet.\n  // The code in the then() expression is what gets executed later, when the login\n  // actually completes.\n\n  // This prevents the Submit button from trying to change the page we're on.\n  event.preventDefault();\n}\n\n// This function is called to update the popup menu of devices\nfunction updateDeviceList() {\n  // We save the last selected device id in a browser cookie, so it will be selected the\n  // next time you open the web page.\n  var lastDeviceId = Cookies.get('lastDeviceId');\n  // Use the listDevices API\n  particle.listDevices({auth: accessToken}).then(\n    function (devices) {\n      for (var ii = 0; ii < devices.body.length; ii++) {\n        var dev = devices.body[ii];\n        console.log(\"dev ii=\" + ii, dev);\n        if (dev.connected) {\n          var sel = '';\n          // This device ID matches the one in the cookie, so mark it as selected\n          if (dev.id == lastDeviceId) {\n            sel = 'selected=\"selected\" ';\n          }\n          var html = '<option value=\"' + dev.id + '\" ' + sel + '>' + dev.name + '</option>';\n          $('#deviceSelect').append(html);\n        }\n      }\n      // If we selected a device in lastDeviceId, load the initial state now\n      deviceSelectChange();\n    },\n    function (err) {\n      // This can happen when a saved access token has expired. If so, remove the saved\n      // access token and display the login page.\n      console.log('listDevices failed ', err);\n      accessTokenErrorHandler();\n    }\n  );\n}\n\nfunction deviceSelectChange() {\n  deviceId = $('#deviceSelect').val();\n  if (deviceId == '') {\n    return;\n  }\n  // Save the selected deviceId in a browser cookie for 7 days\n  Cookies.set('lastDeviceId', deviceId, {expires: 7});\n  // Getting a variable is normally fast for a Photon, under a second. It make take a second or two with an\n  // Electron, especially for the first it has been used in a while. If you select a device that's offline, it\n  // takes a long time (maybe 30 seconds? I didn't actually time it) to get the error back.\n  // Show a progress message in queryingDiv while it's processing.\n  console.log(\"deviceId=\" + deviceId);\n  $('#wrongApiDiv').hide();\n  $('#deviceNotAvailableDiv').hide();\n  $('#appDiv').hide();\n  $('#queryingDiv').show();\n  // Here modification starts (original uses led as variable)\n\n  particle.getVariable({deviceId: deviceId, name: 'getSettings', auth: accessToken}).then(function (data) {\n    console.log('Device variable retrieved successfully'); //, data);\n    // parse the getSettings data\n    var settingsCSV = data.body.result;\n    var settingsArray = settingsCSV.split(\",\");\n    console.log(\"settingsCSV\" + settingsCSV);\n    console.log(\"settingsArray: \" + settingsArray);\n    var inputFields = \"\";\n    for (var d = 0; d < settingsArray.length; d++) {\n\n      inputFields += '<div class=\\\"form-group\\\">';\n      inputFields += '<label class=\\\"control-label\\\">' + settingsVariableNames[d] + '</label>';\n      inputFields += '<input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"' + settingsVariableNames[d] + '\\\" value=' + settingsArray[d] + '>';\n      inputFields += '</div><br/>';\n      //json.push({ settingsVariableNames[i] : settingsArray[i]});\n    }\n    $('#settingsForm').append(inputFields);\n    $('#queryingDiv').hide();\n    $('#appDiv').show();\n\n    console.log(\"test output\");\n    // try-out implementation to submit data from the form to the particle.\n    // not implemented yet.\n    var formOutput = $('#settingsForm').serializeArray();\n    var formOutputString = \"\";\n    var formOutputArray = [];\n    var changedSomething = 0;\n    for (var i = 0; i < formOutput.length; i++) {\n      //formOutputString += formOutput[i].value + \",\";\n      formOutputArray[i] = formOutput[i].value;\n      if (settingsArray[i] !== formOutputArray[i]) {\n        console.log(\"variable that changed: \" + formOutput[i].name);\n        changedSomething++;\n      }\n    }\n\n    formOutputString = formOutputArray.join(\",\");\n    console.log('formOutput: ' + formOutput);\n    console.log('formOutputString: ' + formOutputString);\n    console.log('formOutputArray: ' + formOutputArray);\n  }, function (err) {\n    // We try to get the \"led\" variable. If this causes an error, then the selected device probably\n    // isn't running our code. Show the error message in wrongApiDiv.\n    console.log('failure trying to get getSettings variable ', err);\n    $('#queryingDiv').hide();\n    if (err.statusCode == 404) {\n      $('#wrongApiDiv').show();\n    }\n    else {\n      // Device did not respond is 408 but in this test code we just show that message for all errors\n      $('#deviceNotAvailableDiv').show();\n    }\n  });\n}\n\n// This handles the logout button. Show the login screen and also remove our cookies.\nfunction logoutButtonHandler() {\n  $('#mainDiv').hide();\n  $('#loginDiv').show();\n  accessToken = '';\n  Cookies.remove('accessToken');\n  Cookies.remove('lastDeviceId');\n}\n\n// This happens when our access token expires. Display the login screen, and API failure message, and\n// remove the access token cookie. Leave the selected device ID cookie, since the token probably just\n// expired.\nfunction accessTokenErrorHandler() {\n  $('#mainDiv').hide();\n  $('#loginDiv').show();\n  $('#apiFailureDiv').show();\n  accessToken = '';\n  Cookies.remove('accessToken');\n}\n"]}