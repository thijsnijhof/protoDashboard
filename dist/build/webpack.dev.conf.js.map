{"version":3,"sources":["../../build/webpack.dev.conf.js"],"names":["utils","require","webpack","config","merge","baseWebpackConfig","HtmlWebpackPlugin","FriendlyErrorsPlugin","portfinder","devWebpackConfig","module","rules","styleLoaders","sourceMap","dev","cssSourceMap","usePostCSS","devtool","devServer","clientLogLevel","historyApiFallback","hot","compress","host","process","env","HOST","port","PORT","open","autoOpenBrowser","overlay","errorOverlay","warnings","errors","publicPath","assetsPublicPath","proxy","proxyTable","quiet","watchOptions","poll","plugins","DefinePlugin","HotModuleReplacementPlugin","NamedModulesPlugin","NoEmitOnErrorsPlugin","filename","template","inject","exports","resolve","reject","basePort","getPort","err","push","compilationSuccessInfo","messages","onErrors","notifyOnErrors","createNotifierCallback","undefined"],"mappings":";;;;;;;;AAAA;AACA,IAAMA,QAAQC,QAAQ,SAAR,CAAd;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;AACA,IAAME,SAASF,QAAQ,WAAR,CAAf;AACA,IAAMG,QAAQH,QAAQ,eAAR,CAAd;AACA,IAAMI,oBAAoBJ,QAAQ,qBAAR,CAA1B;AACA,IAAMK,oBAAoBL,QAAQ,qBAAR,CAA1B;AACA,IAAMM,uBAAuBN,QAAQ,gCAAR,CAA7B;AACA,IAAMO,aAAaP,QAAQ,YAAR,CAAnB;;AAEA,IAAMQ,mBAAmBL,MAAMC,iBAAN,EAAyB;AAChDK,UAAQ;AACNC,WAAOX,MAAMY,YAAN,CAAmB,EAAEC,WAAWV,OAAOW,GAAP,CAAWC,YAAxB,EAAsCC,YAAY,IAAlD,EAAnB;AADD,GADwC;AAIhD;AACAC,WAASd,OAAOW,GAAP,CAAWG,OAL4B;;AAOhD;AACAC,aAAW;AACTC,oBAAgB,SADP;AAETC,wBAAoB,IAFX;AAGTC,SAAK,IAHI;AAITC,cAAU,IAJD;AAKTC,UAAMC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBvB,OAAOW,GAAP,CAAWS,IAL5B;AAMTI,UAAMH,QAAQC,GAAR,CAAYG,IAAZ,IAAoBzB,OAAOW,GAAP,CAAWa,IAN5B;AAOTE,UAAM1B,OAAOW,GAAP,CAAWgB,eAPR;AAQTC,aAAS5B,OAAOW,GAAP,CAAWkB,YAAX,GAA0B;AACjCC,gBAAU,KADuB;AAEjCC,cAAQ;AAFyB,KAA1B,GAGL,KAXK;AAYTC,gBAAYhC,OAAOW,GAAP,CAAWsB,gBAZd;AAaTC,WAAOlC,OAAOW,GAAP,CAAWwB,UAbT;AAcTC,WAAO,IAdE,EAcI;AACbC,kBAAc;AACZC,YAAMtC,OAAOW,GAAP,CAAW2B;AADL;AAfL,GARqC;AA2BhDC,WAAS,CACP,IAAIxC,QAAQyC,YAAZ,CAAyB;AACvB,mBAAe1C,QAAQ,mBAAR;AADQ,GAAzB,CADO,EAIP,IAAIC,QAAQ0C,0BAAZ,EAJO,EAKP,IAAI1C,QAAQ2C,kBAAZ,EALO,EAK2B;AAClC,MAAI3C,QAAQ4C,oBAAZ,EANO;AAOP;AACA,MAAIxC,iBAAJ,CAAsB;AACpByC,cAAU,YADU;AAEpBC,cAAU,YAFU;AAGpBC,YAAQ;AAHY,GAAtB,CARO;AA3BuC,CAAzB,CAAzB;;AA2CAvC,OAAOwC,OAAP,GAAiB,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChD5C,aAAW6C,QAAX,GAAsB7B,QAAQC,GAAR,CAAYG,IAAZ,IAAoBzB,OAAOW,GAAP,CAAWa,IAArD;AACAnB,aAAW8C,OAAX,CAAmB,UAACC,GAAD,EAAM5B,IAAN,EAAe;AAChC,QAAI4B,GAAJ,EAAS;AACPH,aAAOG,GAAP;AACD,KAFD,MAEO;AACL;AACA/B,cAAQC,GAAR,CAAYG,IAAZ,GAAmBD,IAAnB;AACA;AACAlB,uBAAiBS,SAAjB,CAA2BS,IAA3B,GAAkCA,IAAlC;;AAEA;AACAlB,uBAAiBiC,OAAjB,CAAyBc,IAAzB,CAA8B,IAAIjD,oBAAJ,CAAyB;AACrDkD,gCAAwB;AACtBC,oBAAU,+CAA6CvD,OAAOW,GAAP,CAAWS,IAAxD,SAAgEI,IAAhE;AADY,SAD6B;AAIrDgC,kBAAUxD,OAAOW,GAAP,CAAW8C,cAAX,GACR5D,MAAM6D,sBAAN,EADQ,GAERC;AANmD,OAAzB,CAA9B;;AASAX,cAAQ1C,gBAAR;AACD;AACF,GArBD;AAsBD,CAxBgB,CAAjB","file":"webpack.dev.conf.js","sourcesContent":["// 'use strict'\nconst utils = require('./utils')\nconst webpack = require('webpack')\nconst config = require('../config')\nconst merge = require('webpack-merge')\nconst baseWebpackConfig = require('./webpack.base.conf')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst FriendlyErrorsPlugin = require('friendly-errors-webpack-plugin')\nconst portfinder = require('portfinder')\n\nconst devWebpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap, usePostCSS: true })\n  },\n  // cheap-module-eval-source-map is faster for development\n  devtool: config.dev.devtool,\n\n  // these devServer options should be customized in /config/index.js\n  devServer: {\n    clientLogLevel: 'warning',\n    historyApiFallback: true,\n    hot: true,\n    compress: true,\n    host: process.env.HOST || config.dev.host,\n    port: process.env.PORT || config.dev.port,\n    open: config.dev.autoOpenBrowser,\n    overlay: config.dev.errorOverlay ? {\n      warnings: false,\n      errors: true,\n    } : false,\n    publicPath: config.dev.assetsPublicPath,\n    proxy: config.dev.proxyTable,\n    quiet: true, // necessary for FriendlyErrorsPlugin\n    watchOptions: {\n      poll: config.dev.poll,\n    }\n  },\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': require('../config/dev.env')\n    }),\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NamedModulesPlugin(), // HMR shows correct file names in console on update.\n    new webpack.NoEmitOnErrorsPlugin(),\n    // https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({\n      filename: 'index.html',\n      template: 'index.html',\n      inject: true\n    }),\n  ]\n})\n\nmodule.exports = new Promise((resolve, reject) => {\n  portfinder.basePort = process.env.PORT || config.dev.port\n  portfinder.getPort((err, port) => {\n    if (err) {\n      reject(err)\n    } else {\n      // publish the new Port, necessary for e2e tests\n      process.env.PORT = port\n      // add port to devServer config\n      devWebpackConfig.devServer.port = port\n\n      // Add FriendlyErrorsPlugin\n      devWebpackConfig.plugins.push(new FriendlyErrorsPlugin({\n        compilationSuccessInfo: {\n          messages: [`Your application is running here: http://${config.dev.host}:${port}`],\n        },\n        onErrors: config.dev.notifyOnErrors\n        ? utils.createNotifierCallback()\n        : undefined\n      }))\n\n      resolve(devWebpackConfig)\n    }\n  })\n})\n"]}