{"version":3,"sources":["../../build/webpack.prod.conf.js"],"names":["path","require","utils","webpack","config","merge","baseWebpackConfig","CopyWebpackPlugin","HtmlWebpackPlugin","ExtractTextPlugin","OptimizeCSSPlugin","env","webpackConfig","module","rules","styleLoaders","sourceMap","build","productionSourceMap","extract","usePostCSS","devtool","output","assetsRoot","filename","assetsPath","chunkFilename","plugins","DefinePlugin","optimize","UglifyJsPlugin","compress","warnings","parallel","allChunks","cssProcessorOptions","safe","map","inline","index","template","inject","minify","removeComments","collapseWhitespace","removeAttributeQuotes","chunksSortMode","HashedModuleIdsPlugin","ModuleConcatenationPlugin","CommonsChunkPlugin","name","minChunks","resource","test","indexOf","join","__dirname","Infinity","async","children","from","resolve","to","assetsSubDirectory","ignore","productionGzip","CompressionWebpackPlugin","push","asset","algorithm","RegExp","productionGzipExtensions","threshold","minRatio","bundleAnalyzerReport","BundleAnalyzerPlugin","exports"],"mappings":"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","file":"webpack.prod.conf.js","sourcesContent":["// 'use strict'\nconst path = require('path')\nconst utils = require('./utils')\nconst webpack = require('webpack')\nconst config = require('../config')\nconst merge = require('webpack-merge')\nconst baseWebpackConfig = require('./webpack.base.conf')\nconst CopyWebpackPlugin = require('copy-webpack-plugin')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst ExtractTextPlugin = require('extract-text-webpack-plugin')\nconst OptimizeCSSPlugin = require('optimize-css-assets-webpack-plugin')\n\nconst env = require('../config/prod.env')\n\nconst webpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({\n      sourceMap: config.build.productionSourceMap,\n      extract: true,\n      usePostCSS: true\n    })\n  },\n  devtool: config.build.productionSourceMap ? config.build.devtool : false,\n  output: {\n    path: config.build.assetsRoot,\n    filename: utils.assetsPath('js/[name].[chunkhash].js'),\n    chunkFilename: utils.assetsPath('js/[id].[chunkhash].js')\n  },\n  plugins: [\n    // http://vuejs.github.io/vue-loader/en/workflow/production.html\n    new webpack.DefinePlugin({\n      'process.env': env\n    }),\n    // UglifyJs do not support ES6+, you can also use babel-minify for better treeshaking: https://github.com/babel/minify\n    new webpack.optimize.UglifyJsPlugin({\n      compress: {\n        warnings: false\n      },\n      sourceMap: config.build.productionSourceMap,\n      parallel: true\n    }),\n    // extract css into its own file\n    new ExtractTextPlugin({\n      filename: utils.assetsPath('css/[name].[contenthash].css'),\n      // set the following option to `true` if you want to extract CSS from\n      // codesplit chunks into this main css file as well.\n      // This will result in *all* of your app's CSS being loaded upfront.\n      allChunks: false,\n    }),\n    // Compress extracted CSS. We are using this plugin so that possible\n    // duplicated CSS from different components can be deduped.\n    new OptimizeCSSPlugin({\n      cssProcessorOptions: config.build.productionSourceMap\n      ? { safe: true, map: { inline: false } }\n      : { safe: true }\n    }),\n    // generate dist index.html with correct asset hash for caching.\n    // you can customize output by editing /index.html\n    // see https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({\n      filename: config.build.index,\n      template: 'index.html',\n      inject: true,\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeAttributeQuotes: true\n        // more options:\n        // https://github.com/kangax/html-minifier#options-quick-reference\n      },\n      // necessary to consistently work with multiple chunks via CommonsChunkPlugin\n      chunksSortMode: 'dependency'\n    }),\n    // keep module.id stable when vender modules does not change\n    new webpack.HashedModuleIdsPlugin(),\n    // enable scope hoisting\n    new webpack.optimize.ModuleConcatenationPlugin(),\n    // split vendor js into its own file\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'vendor',\n      minChunks: function (module) {\n        // any required modules inside node_modules are extracted to vendor\n        return (\n          module.resource &&\n          /\\.js$/.test(module.resource) &&\n          module.resource.indexOf(\n            path.join(__dirname, '../node_modules')\n          ) === 0\n        )\n      }\n    }),\n    // extract webpack runtime and module manifest to its own file in order to\n    // prevent vendor hash from being updated whenever app bundle is updated\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'manifest',\n      minChunks: Infinity\n    }),\n    // This instance extracts shared chunks from code splitted chunks and bundles them\n    // in a separate chunk, similar to the vendor chunk\n    // see: https://webpack.js.org/plugins/commons-chunk-plugin/#extra-async-commons-chunk\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'app',\n      async: 'vendor-async',\n      children: true,\n      minChunks: 3\n    }),\n\n    // copy custom static assets\n    new CopyWebpackPlugin([\n      {\n        from: path.resolve(__dirname, '../static'),\n        to: config.build.assetsSubDirectory,\n        ignore: ['.*']\n      }\n    ])\n  ]\n})\n\nif (config.build.productionGzip) {\n  const CompressionWebpackPlugin = require('compression-webpack-plugin')\n\n  webpackConfig.plugins.push(\n    new CompressionWebpackPlugin({\n      asset: '[path].gz[query]',\n      algorithm: 'gzip',\n      test: new RegExp(\n        '\\\\.(' +\n        config.build.productionGzipExtensions.join('|') +\n        ')$'\n      ),\n      threshold: 10240,\n      minRatio: 0.8\n    })\n  )\n}\n\nif (config.build.bundleAnalyzerReport) {\n  const BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin\n  webpackConfig.plugins.push(new BundleAnalyzerPlugin())\n}\n\nmodule.exports = webpackConfig\n"]}