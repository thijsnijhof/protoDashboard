{"version":3,"sources":["../../build/webpack.base.conf.js"],"names":["path","require","utils","config","vueLoaderConfig","ExtractTextPlugin","resolve","dir","join","__dirname","module","exports","context","entry","app","output","build","assetsRoot","filename","publicPath","process","env","NODE_ENV","assetsPublicPath","dev","extensions","alias","rules","test","use","loader","options","include","limit","name","assetsPath","extract","plugins"],"mappings":"AAAA;;AACA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,QAAQD,QAAQ,SAAR,CAAd;AACA,IAAME,SAASF,QAAQ,WAAR,CAAf;AACA,IAAMG,kBAAkBH,QAAQ,mBAAR,CAAxB;AACA,IAAMI,oBAAoBJ,QAAQ,6BAAR,CAA1B;;AAEA,SAASK,OAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAOP,KAAKQ,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2BF,GAA3B,CAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiB;AACfC,WAASZ,KAAKM,OAAL,CAAaG,SAAb,EAAwB,KAAxB,CADM;AAEfI,SAAO;AACLC,SAAK;AADA,GAFQ;AAKfC,UAAQ;AACNf,UAAMG,OAAOa,KAAP,CAAaC,UADb;AAENC,cAAU,WAFJ;AAGNC,gBAAYC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACRnB,OAAOa,KAAP,CAAaO,gBADL,GAERpB,OAAOqB,GAAP,CAAWD;AALT,GALO;AAYfjB,WAAS;AACPmB,gBAAY,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,CADL;AAEPC,WAAO;AACL,cAAQ,qBADH;AAEL,WAAKpB,QAAQ,KAAR;AAFA;AAFA,GAZM;AAmBfI,UAAQ;AACNiB,WAAO,CACL;AACEC,YAAM,kBADR;AAEEC,WAAK,CAAE,aAAF;AAFP,KADK,EAKL;AACED,YAAM,QADR;AAEEE,cAAQ,YAFV;AAGEC,eAAS3B;AAHX,KALK,EAUL;AACEwB,YAAM,OADR;AAEEE,cAAQ,cAFV;AAGEE,eAAS,CAAC1B,QAAQ,KAAR,CAAD,EAAiBA,QAAQ,MAAR,CAAjB;AAHX,KAVK,EAeL;AACEsB,YAAM,+BADR;AAEEE,cAAQ,YAFV;AAGEC,eAAS;AACPE,eAAO,KADA;AAEPC,cAAMhC,MAAMiC,UAAN,CAAiB,2BAAjB;AAFC;AAHX,KAfK,EAuBL;AACEP,YAAM,2CADR;AAEEE,cAAQ,YAFV;AAGEC,eAAS;AACPE,eAAO,KADA;AAEPC,cAAMhC,MAAMiC,UAAN,CAAiB,6BAAjB;AAFC;AAHX,KAvBK,EA+BL;AACEP,YAAM,gCADR;AAEEE,cAAQ,YAFV;AAGEC,eAAS;AACPE,eAAO,KADA;AAEPC,cAAMhC,MAAMiC,UAAN,CAAiB,6BAAjB;AAFC;AAHX,KA/BK,EAuCL;AACEP,YAAM,QADR;AAEEC,WAAKxB,kBAAkB+B,OAAlB,CAA0B;AAC7BP,aAAK,CAAE,YAAF,EAAe,kBAAf;AADwB,OAA1B;AAFP,KAvCK,EA6CL;AACED,YAAM,4CADR;AAEEC,WAAK,CAAE,aAAF;AAFP,KA7CK;AADD,GAnBO;AAuEfQ,WAAS,CACP,IAAIhC,iBAAJ,CAAsB,YAAtB,CADO;AAvEM,CAAjB","file":"webpack.base.conf.js","sourcesContent":["'use strict'\nconst path = require('path')\nconst utils = require('./utils')\nconst config = require('../config')\nconst vueLoaderConfig = require('./vue-loader.conf')\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\n\nfunction resolve (dir) {\n  return path.join(__dirname, '..', dir)\n}\n\nmodule.exports = {\n  context: path.resolve(__dirname, '../'),\n  entry: {\n    app: './src/main.js'\n  },\n  output: {\n    path: config.build.assetsRoot,\n    filename: '[name].js',\n    publicPath: process.env.NODE_ENV === 'production'\n      ? config.build.assetsPublicPath\n      : config.dev.assetsPublicPath\n  },\n  resolve: {\n    extensions: ['.js', '.vue', '.json'],\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src'),\n    }\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/,\n        use: [ 'file-loader' ]\n      },\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader',\n        options: vueLoaderConfig\n      },\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        include: [resolve('src'), resolve('test')]\n      },\n      {\n        test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('img/[name].[hash:7].[ext]')\n        }\n      },\n      {\n        test: /\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('media/[name].[hash:7].[ext]')\n        }\n      },\n      {\n        test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('fonts/[name].[hash:7].[ext]')\n        }\n      },\n      {\n        test: /\\.css$/,\n        use: ExtractTextPlugin.extract({\n          use: [ 'css-loader','to-string-loader' ]\n        })\n      },\n      {\n        test: /\\.(ttf|eot|svg|woff(2)?)(\\?[a-z0-9=&.]+)?$/,\n        use: [ 'file-loader' ]\n      },\n    ],\n  },\n  plugins: [\n    new ExtractTextPlugin('styles.css'),\n  ]\n};\n"]}